import*as a from"d3";var t={625:(a,t,e)=>{e.d(t,{HO:()=>l,Mf:()=>n,O1:()=>o,WV:()=>s,xZ:()=>i});const o={timestamp:[],xindex:[],open:[],high:[],low:[],close:[],volume:[]},s=[{plotStatus:!0,plotName:"OHLCPlot",xdataTag:"xindex",ydataTag:"ohlc",xscaleTag:"bot",yscaleTag:"TR",plotType:"ohlc",plotcolor:"red",buttontag:"OHLCPlot",buttonSvgIcon:"barchart",tooltip:!0},{plotStatus:!0,plotName:"zigzaglot",xdataTag:"zigzagX",ydataTag:"zigzagY",xscaleTag:"bot",yscaleTag:"TR",plotType:"line",plotcolor:"blue",buttontag:"OHLCPlot",buttonSvgIcon:"barchart",tooltip:!0,clipdata:!1},{plotStatus:!0,plotName:"brlinelot",xdataTag:"xindex",ydataTag:"brlinedata",xscaleTag:"bot",yscaleTag:"TR",plotType:"multiline",plotcolor:"black",buttontag:"BrlInePlot",buttonSvgIcon:"hline",tooltip:!0,clipdata:!1},{plotStatus:!1,plotName:"SMAPlot",xdataTag:"xindex",ydataTag:"ema",xscaleTag:"bot",yscaleTag:"TR",plotType:"line",plotcolor:"red",buttontag:"SMAPlot",buttonSvgIcon:"E5",tooltip:!0},{plotStatus:!1,plotName:"VolumePlot",xdataTag:"xindex",ydataTag:"volume",xscaleTag:"bot",yscaleTag:"BR",plotType:"bar",buttontag:"VolumePlot",buttonSvgIcon:"Volume",plotcolor:"blue",tooltip:!0},{plotStatus:!1,plotName:"HighPlot",xdataTag:"xindex",ydataTag:"high",xscaleTag:"bot",yscaleTag:"LR",plotType:"scatter",buttontag:"HighPlot",buttonSvgIcon:"CRSI"},{plotStatus:!1,plotName:"RSIplt",xdataTag:"xindex",ydataTag:"rsi",xscaleTag:"bot",yscaleTag:"rsi_scale",plotType:"line",plotcolor:"black",buttontag:"RSIPlot",buttonSvgIcon:"RSI"},{plotStatus:!1,plotName:"AdxPlt",xdataTag:"xindex",ydataTag:"adx",xscaleTag:"bot",yscaleTag:"rsi_scale",plotType:"line",plotcolor:"blue",buttontag:"ADXplot",buttonSvgIcon:"ADX"},{plotStatus:!1,plotName:"dmpPlt",xdataTag:"xindex",ydataTag:"dmp",xscaleTag:"bot",yscaleTag:"rsi_scale",plotType:"line",plotcolor:"green",buttontag:"ADXplot",buttonSvgIcon:"ADX"},{plotStatus:!1,plotName:"dmnPlt",xdataTag:"xindex",ydataTag:"dmn",xscaleTag:"bot",yscaleTag:"rsi_scale",plotType:"line",plotcolor:"red",buttontag:"ADXplot",buttonSvgIcon:"ADX"},{plotStatus:!1,plotName:"FundaPlot",xdataTag:"fundaX1",ydataTag:"fundaMultibarY",xscaleTag:"Funda_xscale",yscaleTag:"Funda_yscale",plotType:"mulitbar",buttontag:"FundaPlot",buttonSvgIcon:"EPS"},{plotStatus:!1,plotName:"backtestplot",xdataTag:"xindex",ydataTag:"backtestresultline",xscaleTag:"bot",yscaleTag:"TR",plotType:"backtest",plotcolor:"blue",buttontag:"backtestplot",buttonSvgIcon:"BT",tooltip:!1,clipdata:!1}],l=[{xscaleTag:"bot",xsaleType:"Linear",scaleSide:"Bottom",ticlavelmappedwith:"timestamp",ypoint:20,xscaleRange:[0,100],xscaleDataTag:"xindex",zoomstatus:!0},{xscaleTag:"top",xsaleType:"Linear",scaleSide:"Top",ticlavelmappedwith:"xindex",ypoint:300,xscaleRange:[0,100],xscaleDataTag:"xindex"},{xscaleTag:"Funda_xscale",xsaleType:"Linear",scaleSide:"Top",ticlavelmappedwith:"fundaMappedX1",ypoint:20,xscaleRange:[0,100],xscaleDataTag:"fundaX1",zoomstatus:!1}],n=[{yscaleTag:"TR",yaxisTag:"1main",scaleSide:"Right",xpoint:100,yscaleDataTag:"ohlc",xscaleVisibleRange:[0,0],zoomstatus:!0,autozoom:!0},{yscaleTag:"TL",yaxisTag:"1main",scaleSide:"Left",xpoint:100,yscaleDataTag:"close",xscaleVisibleRange:[0,0],zoomstatus:!0,autozoom:!1},{yscaleTag:"BR",yaxisTag:"volumeaxis",scaleSide:"Right",xpoint:20,yscaleDataTag:"volume",xscaleVisibleRange:[0,0],autozoom:!0,zoomstatus:!0},{yscaleTag:"LR",yaxisTag:"rsiAxis",scaleSide:"Right",xpoint:20,yscaleDataTag:"high",xscaleVisibleRange:[0,0],autozoom:!0,zoomstatus:!0},{yscaleTag:"rsi_scale",yaxisTag:"rsiAxis",scaleSide:"Right",xpoint:0,yscaleDataTag:"rsi",xscaleVisibleRange:[0,0],autozoom:!1,zoomstatus:!1},{yscaleTag:"Funda_yscale",yaxisTag:"FundaAxis",scaleSide:"Right",xpoint:20,yscaleDataTag:"fundaMultibarY",xscaleVisibleRange:[0,0],autozoom:!1,zoomstatus:!0}],i={svgWidth:500,svgHeight:200,targetID:"chartContainer",stockid:"StockName:1D",liveupdatefunction:function(){throw new Error("Function not implemented.")},margin:{top:20,right:50,bottom:20,left:0,innerLeft:0,innerRight:100,innerBottom:20,innerTop:20},get width(){return this.svgWidth-this.margin.left-this.margin.right-this.margin.innerRight-this.margin.innerLeft},get height(){return this.svgHeight-this.margin.top-this.margin.bottom-this.margin.innerTop-this.margin.innerBottom}}},507:(t,e,o)=>{var s,l;t.exports=(s={extent:()=>a.extent,max:()=>a.max,min:()=>a.min,scaleBand:()=>a.scaleBand,scaleLinear:()=>a.scaleLinear,scaleTime:()=>a.scaleTime,zoomIdentity:()=>a.zoomIdentity},l={},o.d(l,s),l)}},e={};function o(a){var s=e[a];if(void 0!==s)return s.exports;var l=e[a]={exports:{}};return t[a](l,l.exports,o),l.exports}o.d=(a,t)=>{for(var e in t)o.o(t,e)&&!o.o(a,e)&&Object.defineProperty(a,e,{enumerable:!0,get:t[e]})},o.o=(a,t)=>Object.prototype.hasOwnProperty.call(a,t);var s={};(()=>{o.d(s,{Aw:()=>p,FA:()=>I,Gi:()=>e,Iy:()=>_,Kj:()=>y,Kw:()=>v,Mr:()=>u,Os:()=>m,TW:()=>D,Vn:()=>z,WW:()=>b,Y2:()=>T,YC:()=>r,Yh:()=>i,_w:()=>g,bx:()=>w,cc:()=>N,cu:()=>P,dO:()=>l,ho:()=>V,j:()=>j,j1:()=>S,jx:()=>n,mb:()=>c,pI:()=>h,rG:()=>x,rk:()=>R,sx:()=>d,v$:()=>O,wy:()=>f});var a=o(507),t=o(625);let e=t.O1,l=t.xZ,n={},i={},c={},g={},r={},p={plotName:new Set,xscaleTag:new Set,yscaleTag:new Set,yaxisTag:new Set},u={};function x(a){e=a}function d(a){Object.assign(l,a)}function T(a,t,e){1==e?u={}:u.hasOwnProperty(a)?u[a]=Object.assign(Object.assign({},u[a]),t):u[a]=Object.assign({range:[0,0],plotname:[],yscaleTag:[]},t)}function y(a){for(const t in u)if(u.hasOwnProperty(t)){const e=u[t].range;if(a>=e[1]&&a<=e[0])return t}}function m(){const a={};for(const t in c)if(c.hasOwnProperty(t)){const e=c[t];if(e.plotStatus){const t=e.yscaleTag;if(t in i){const o=i[t].yaxisTag;a[o]||(a[o]={plotName:[],yscaleTag:[]}),a[o].plotName.push(e.plotName),a[o].yscaleTag.includes(t)||a[o].yscaleTag.push(t)}}}return a}function h(){let t=[];if(this.xsaleType="Linear"){const o=e[this.xscaleDataTag].length;t=a.extent([0,o])}else t=a.extent(e[this.xscaleDataTag]);const o="Linear"==this.xsaleType?a.scaleLinear().range(this.xscaleRange).domain(t):"TimeScale"===this.xsaleType?a.scaleTime().range(this.xscaleRange).domain(t):a.scaleBand().range(this.xscaleRange).domain(t.map((a=>a.toString())));return{domain:t,XSCALE:o}}function b(){let t=[],o=null,s=null,l=[];if("ohlc"==this.yscaleDataTag)l=0==this.xscaleVisibleRange[1]?[0,e.low.length]:this.xscaleVisibleRange,t=[a.min(e.low.slice(l[0],l[1])),a.max(e.high.slice(l[0],l[1]))];else if("fundaMultibarY"==this.yscaleDataTag){const o=Object.values(e[this.yscaleDataTag]),s=[].concat(...o);l=0==this.xscaleVisibleRange[1]?[0,o[0].length]:this.xscaleVisibleRange,t=[a.min(s.slice(l[0],l[1])),a.max(s.slice(l[0],l[1]))]}else if("rsi"==this.yscaleDataTag){const o=Object.values(e[this.yscaleDataTag]),s=[].concat(...o);l=0==this.xscaleVisibleRange[1]?[0,o[0].length]:this.xscaleVisibleRange,t=[a.min(s.slice(l[0],l[1])),a.max(s.slice(l[0],l[1]))],t=[0,100]}else l=0==this.xscaleVisibleRange[1]?[0,e[this.yscaleDataTag].length]:this.xscaleVisibleRange,t=a.extent(e[this.yscaleDataTag].slice(l[0],l[1]));const n=Array.from(t),i=.1*(n[1]-n[0]),c=[n[0]-i,n[1]+i];if(null!=this.yaxisrange&&(o=a.scaleLinear().range(this.yaxisrange).domain(c),s=this.yzoomtransform.rescaleY(o)),"BR"==this.yscaleTag&&null!=s){let a=[0,s.domain()[1]];s.domain(a)}return{domain:t,YSCALE:o,TranSFormedYscale:s}}function S(a,t){c.hasOwnProperty(a)?c[a]=Object.assign(Object.assign({},c[a]),t):c[a]=Object.assign({plotStatus:!0,plotName:"PlotName",xdata:()=>[],ydata:()=>[],xscaleTag:"Bot1",yscaleTag:"TL",plotType:"line",plotcolor:"red",buttontag:"no-button",buttonSvgIcon:"defaultsvg",tooltip:!1,clipdata:!0},t)}function f(a,t){n.hasOwnProperty(a)?n[a]=Object.assign(Object.assign({},n[a]),t):n[a]=Object.assign({xsaleType:"Linear",xscaleTag:"bot",scaleSide:"Bottom",ticlavelmappedwith:"xindex",ypoint:100,xscaleRange:[0,100],xscaleDataTag:"xindex",zoomstatus:!0,xscale:h},t)}function R(t,e){i.hasOwnProperty(t)?i[t]=Object.assign(Object.assign({},i[t]),e):i[t]=Object.assign({yscaleTag:"bot",yaxisTag:"1main",scaleSide:"Left",xpoint:100,yaxisrange:null,yscaleDataTag:"close",xscaleVisibleRange:[0,10],zoomstatus:!0,autozoom:!0,ydomaindata:[0,0],yscale:b,yzoomtransform:a.zoomIdentity},e)}const v=(a=t.HO)=>{a.map((a=>{const{xscaleTag:t,ypoint:e,xscaleRange:o,scaleSide:s,xsaleType:l,ticlavelmappedwith:n,xscaleDataTag:i,zoomstatus:c}=a;f(t,{xscaleTag:t,xsaleType:l,scaleSide:s,ticlavelmappedwith:n,ypoint:e,xscaleRange:o,xscaleDataTag:i,zoomstatus:c||!1,xscale:h})}))},O=(e=t.Mf)=>{e.map((t=>{const{yscaleTag:e,yaxisTag:o,xpoint:s,yaxisrange:l,yscaleDataTag:n,zoomstatus:i,scaleSide:c,xscaleVisibleRange:g,autozoom:r}=t;R(e,{yscaleTag:e,yaxisTag:o,scaleSide:c,xpoint:s,yscaleDataTag:n,yaxisrange:l||null,xscaleVisibleRange:g,zoomstatus:i||!1,autozoom:r||!1,ydomaindata:[0,0],yscale:b,yzoomtransform:a.zoomIdentity})}))},D=(a=t.WV)=>{a.map((a=>{const{plotStatus:t,plotName:o,xdataTag:s,ydataTag:l,xscaleTag:n,yscaleTag:i,buttonSvgIcon:c,plotType:g,plotcolor:r,buttontag:p,tooltip:u,clipdata:x}=a;S(o,{plotStatus:t,plotName:o,xdata:()=>e[s],ydata:"ohlc"==l?()=>[]:()=>e[l],xscaleTag:n,yscaleTag:i,plotType:g,plotcolor:r||"green",buttontag:p||"no-button",buttonSvgIcon:c||"defaultsvg",tooltip:u||!1,clipdata:null==x||x})}))};function P(a){const t=new Set,e=new Set,o=new Set,s=new Set;return Object.values(a).filter((a=>a.plotStatus)).forEach((a=>{t.add(a.plotName),e.add(a.xscaleTag),o.add(a.yscaleTag),s.add(i[a.yscaleTag].yaxisTag)})),{plotName:t,xscaleTag:e,yscaleTag:o,yaxisTag:s}}function z(a){for(const t in a)p[t].clear();for(const t in a){const e=t;a[t].forEach((a=>p[e].add(a)))}}function w(){Object.entries(c).forEach((([a,t])=>{"no-button"!==t.buttontag&&(g[a]={plotStatus:t.plotStatus,plotName:t.plotName,buttonid:`buttonid_${t.buttontag}`,buttonSvgIcon:t.buttonSvgIcon})}))}function I(a){const t=[];return Object.entries(g).forEach((([e,o])=>{o.buttonid===a&&t.push(e)})),t}function j(a,t,e){Object.entries(i).filter((([e,o])=>o[a]===t)).forEach((([a,t])=>{i[a]=Object.assign(Object.assign({},t),e)}))}function N(a){const t=l.height,e=1/a.length;let o;2==a.length&&(o=[.7,.3]),3==a.length&&(o=[.6,.2,.2]);let s=0,n={};return a.forEach(((a,i)=>{const c=o&&o.length>0?o[i]:e,g=l.margin.top+l.margin.innerTop+t*s,r=g+t*c;n[a]={yaxisrange:[r,g]},s+=c})),n}function V(){r={},Object.values(c).forEach((a=>{if(a.plotStatus){const t=a.xscaleTag;r[t]||(r[t]=[]),r[t].includes(a.yscaleTag)||r[t].push(a.yscaleTag)}}))}function _(){const a={};return Object.keys(c).forEach((t=>{const e=c[t].plotType;a[e]||(a[e]=[]),a[e].push(t)})),a}})();var l=s._w,n=s.Aw,i=s.dO,c=s.Gi,g=s.mb,r=s.jx,p=s.YC,u=s.Yh,x=s.Mr,d=s.FA,T=s.ho,y=s.Kj,m=s.Os,h=s.bx,b=s.cu,S=s.pI,f=s.cc,R=s.WW,v=s.Iy,O=s.sx,D=s.rG,P=s.Vn,z=s.j1,w=s.wy,I=s.rk,j=s.Kw,N=s.j,V=s.Y2,_=s.v$,B=s.TW;export{l as Shared_ButtonProp,n as Shared_ChartBaseData,i as Shared_ChartDimension,c as Shared_ChartPlotData,g as Shared_PlotInfo,r as Shared_XScaleConfig,p as Shared_XYrelation,u as Shared_YScaleConfig,x as Shared_yaxisProp,d as collectKeysByButtonId,T as generateRelationObject,y as getAxisKeyForRangeValue,m as getPlotNamesAndYScaleTagsByYAxisTag,h as getPlotStatusByButtonTag,b as getUniquePlotsWithStatusTrue,S as getXscale,f as getYaxisRatio,R as getYscale,v as groupDataByPlotType,O as updateChartBaseProp,D as updateChartPlotData,P as updateSharedChartData,z as updateShared_PlotInfo,w as updateShared_XScaleConfig,I as updateShared_YScaleConfig,j as updateXscaleconfig,N as updateYScaleConfigByKey,V as updateYaxis,_ as updateYscaleconfig,B as updateplotInfo};